name: Terraform Template

on:
  workflow_call:
    inputs:
      approvers:
        description: 'GitHub username of the approver for Terraform Plan.'
        type: string
        required: true
      app-env:
        description: 'Application environment name for Terraform Plan (state key).'
        type: string
        required: true
      environment:
        description: 'GitHub environment name, selects tfvar file.'
        type: string
        required: true
      infra-repo:
        description: 'GitHub repository with Terraform code.'
        type: string
        required: true
      infra-ref:
        description: 'Branch or tag of the infra-repo.'
        type: string
        required: true
      terraform-version:
        description: 'Terraform version.'
        type: string
        default: 1.9.5
      terraform-environment-dir:
        description: 'Directory for Terraform environment files.'
        type: string
        default: "envs"
    secrets:
      ARM_CLIENT_ID:
        description: 'Azure Service Principal Client ID.'
        required: true
      ARM_SUBSCRIPTION_ID:
        description: 'Azure Subscription ID.'
        required: true
      ARM_TENANT_ID:
        description: 'Azure Tenant ID.'
        required: true
      GITHUB_PAT:
        description: 'GitHub PAT'
        required: true
      BACKEND_AZURE_RESOURCE_GROUP_NAME:
        description: 'Azure Resource Group name for Terraform backend.'
        required: true
      BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME:
        description: 'Azure Storage Account Container name for Terraform backend.'
        required: true
      BACKEND_AZURE_STORAGE_ACCOUNT_NAME:
        description: 'Azure Storage Account name for Terraform backend.'
        required: true   

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_LOG: ERROR
  TF_LOG_PATH: tf.log
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    outputs:
      tfplanExitCode: ${{ steps.plan.outputs.exitcode }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_PAT || github.token }}
          repository: ${{ inputs.infra-repo }}
          ref: ${{ inputs.infra-ref }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}
      
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}" \
            -backend-config="storage_account_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" \
            -backend-config="container_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}" \
            -backend-config="key=${{ inputs.app-env }}.tfstate"
      
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Format
        run: terraform fmt -recursive -check

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var-file="${{ inputs.terraform-environment-dir }}/${{ inputs.environment }}.tfvars" \
            -out=tfplan
      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./tfplan

  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [terraform-plan]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_PAT || github.token }}
          repository: ${{ inputs.infra-repo }}
          ref: ${{ inputs.infra-ref }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Init
        run: |
          terraform init \
           -backend-config="resource_group_name=${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}" \
           -backend-config="storage_account_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" \
           -backend-config="container_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}" \
           -backend-config="key=${{ inputs.app-env }}.tfstate"

      - name: Terraform Apply
        run: terraform apply tfplan

